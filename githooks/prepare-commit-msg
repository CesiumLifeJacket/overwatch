#!/usr/bin/env python
#*********************************************************************************
#    ___         _     ___ _        _   _     
#   / __|___  __| |___/ __| |_ _  _| | (_)___ 
#  | (__/ _ \/ _` / -_)__ \  _| || | |_| / _ \
#   \___\___/\__,_\___|___/\__|\_, |_(_)_\___/
#                              |__/                                                         
#
#
# Originaly developed by students of Whitworth University -> http://www.whitworth.edu/cms/
# 
# Incepted and maintained by Will Czifro -> will@czifrotech.com
#
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
#*********************************************************************************
#
# Patrick Price
# patrickpr12@gmail.com
#
#
#

docker_image_name = "stylewatcher:v1"
report_directory = "boop_report"

import sys, os, re, subprocess

#function defs for checking docker installation
def which(program):
    import os
    def is_exe(fpath):
        return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

    fpath, fname = os.path.split(program)
    if fpath:
        if is_exe(program):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            path = path.strip('"')
            exe_file = os.path.join(path, program)
            if is_exe(exe_file):
                return exe_file

    return None

#check for valid docker install
no_valid_install = (which("docker") == None and which("docker.exe") == None)

if(no_valid_install):
    #if no valid docker install, prompt the user to install docker
    print(
        """No Docker installation found
        To use StyleWatcher, please install Docker locally
        https://docs.docker.com/engine/installation/""")
else:
    #if a docker install is found, run docker image to generate style report
    print("Generating StyleWatcher report in "+report_directory+"/")
    #from subprocess import check_output
    p = subprocess.Popen(
        "docker run -v $PWD:/hostdata "+docker_image_name+" python3 /overwatch/command-line/check-style.py /hostdata/"+report_directory+" --project_directory=/hostdata", 
        stdout=subprocess.PIPE, shell=True)
    #(output, err) = p.communicate()
    print(p.communicate())
    print()